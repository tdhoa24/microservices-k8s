{"ast":null,"code":"import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import{Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography,Container,Box,Avatar,Button}from'@material-ui/core';import{Link}from'react-router-dom';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({container:{marginTop:theme.spacing(4)},header:{display:'flex',alignItems:'center',marginBottom:theme.spacing(4)},backButton:{marginRight:'auto'},title:{flexGrow:1,textAlign:'center'},tableHeader:{backgroundColor:theme.palette.primary.main,color:theme.palette.common.white},tableHeaderCell:{fontWeight:'bold',color:'inherit'},productImage:{width:theme.spacing(8),height:theme.spacing(8),marginRight:theme.spacing(2)},inventoryCell:{fontWeight:'bold'},lowInventory:{color:theme.palette.error.main}}));const Inventory=()=>{const classes=useStyles();const[products,setProducts]=useState([]);useEffect(()=>{fetchInventoryAndProducts();},[]);const fetchInventoryAndProducts=async()=>{try{const response=await fetch('/api/inventory');const data=await response.json();setProducts(data);}catch(error){console.error('Error fetching data:',error);toast.error('Unable to access API',{position:\"top-right\",autoClose:3000});}};const getProductImage=productName=>{return\"/images/products/\".concat(productName,\".webp\");};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",className:classes.container,children:[/*#__PURE__*/_jsxs(Box,{className:classes.header,children:[/*#__PURE__*/_jsx(Button,{component:Link,to:\"/\",className:classes.backButton,variant:\"outlined\",children:\"\\u2190 Back to Homepage\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",className:classes.title})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,elevation:3,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{className:classes.tableHeader,children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Product\"}),/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Description\"}),/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Price\"}),/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Category\"}),/*#__PURE__*/_jsx(TableCell,{className:classes.tableHeaderCell,children:\"Inventory\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:products.map(product=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Avatar,{src:getProductImage(product.name),alt:product.name,className:classes.productImage})}),/*#__PURE__*/_jsx(TableCell,{children:product.name}),/*#__PURE__*/_jsx(TableCell,{children:product.description}),/*#__PURE__*/_jsx(TableCell,{children:\"$\".concat(product.price.toFixed(2))}),/*#__PURE__*/_jsx(TableCell,{children:product.category}),/*#__PURE__*/_jsx(TableCell,{className:\"\".concat(classes.inventoryCell,\" \").concat(product.quantity<=10?classes.lowInventory:''),children:product.quantity})]},product.id))})]})})]});};export default Inventory;","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Container","Box","Avatar","Button","Link","toast","jsx","_jsx","jsxs","_jsxs","useStyles","theme","container","marginTop","spacing","header","display","alignItems","marginBottom","backButton","marginRight","title","flexGrow","textAlign","tableHeader","backgroundColor","palette","primary","main","color","common","white","tableHeaderCell","fontWeight","productImage","width","height","inventoryCell","lowInventory","error","Inventory","classes","products","setProducts","fetchInventoryAndProducts","response","fetch","data","json","console","position","autoClose","getProductImage","productName","concat","maxWidth","className","children","component","to","variant","elevation","map","product","src","name","alt","description","price","toFixed","category","quantity","id"],"sources":["/Users/rayanslim/Desktop/docker-bootcamp-resources/03-section-three/ecommerce-ui/client/src/pages/Inventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Container,\n  Box,\n  Avatar,\n  Button,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(4),\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(4),\n  },\n  backButton: {\n    marginRight: 'auto',\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  tableHeader: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  tableHeaderCell: {\n    fontWeight: 'bold',\n    color: 'inherit',\n  },\n  productImage: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n  inventoryCell: {\n    fontWeight: 'bold',\n  },\n  lowInventory: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst Inventory = () => {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetchInventoryAndProducts();\n  }, []);\n\n  const fetchInventoryAndProducts = async () => {\n    try {\n      const response = await fetch('/api/inventory');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      toast.error('Unable to access API', {\n        position: \"top-right\",\n        autoClose: 3000,\n      });\n    }\n  };\n\n  const getProductImage = (productName) => {\n    return `/images/products/${productName}.webp`;\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Box className={classes.header}>\n        <Button component={Link} to=\"/\" className={classes.backButton} variant=\"outlined\">\n          &larr; Back to Homepage\n        </Button>\n        <Typography variant=\"h4\" component=\"h1\" className={classes.title}></Typography>\n      </Box>\n      <TableContainer component={Paper} elevation={3}>\n        <Table>\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.tableHeaderCell}>Product</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Name</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Description</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Price</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Category</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Inventory</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map((product) => (\n              <TableRow key={product.id}>\n                <TableCell>\n                  <Avatar src={getProductImage(product.name)} alt={product.name} className={classes.productImage} />\n                </TableCell>\n                <TableCell>{product.name}</TableCell>\n                <TableCell>{product.description}</TableCell>\n                <TableCell>{`$${product.price.toFixed(2)}`}</TableCell>\n                <TableCell>{product.category}</TableCell>\n                <TableCell\n                  className={`${classes.inventoryCell} ${product.quantity <= 10 ? classes.lowInventory : ''}`}\n                >\n                  {product.quantity}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default Inventory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}